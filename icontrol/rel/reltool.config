%% -*- mode: erlang -*-
%% ex: ft=erlang
{sys, [
       {lib_dirs, ["../apps", "../../deps"]},
       {erts, [{mod_cond, derived}, {app_file, strip}]},
       {app_file, strip},
       {rel, "icontrol", "1",
        [
         %% OTP Applications
         kernel,
         stdlib,
         sasl,
         public_key,
         crypto,
         ssl,
         compiler,
         syntax_tools,
         runtime_tools,
         xmerl,
         mnesia,
         %% Project dependencies
         eenum,
         goldrush,
         lager,
         %% Project applications
         icontrol,
         ofs_handler,
         of_driver,
         of_msg_lib
        ]},
       {rel, "start_clean", "",
        [
         kernel,
         stdlib
        ]},
       {boot_rel, "icontrol"},
       {profile, embedded},
       {incl_cond, derived},
       {excl_archive_filters, [".*"]}, %% Do not archive built libs
       {excl_sys_filters, ["^bin/(?!start_clean.boot)",
                           "^erts.*/bin/(dialyzer|typer)",
                           "^erts.*/(doc|info|include|lib|man|src)"]},
       {excl_app_filters, ["\.gitignore"]},
       %% OTP Applications
       {app, sasl,   [{incl_cond, include}]},
       {app, stdlib, [{incl_cond, include}]},
       {app, kernel, [{incl_cond, include}]},
       {app, hipe, [{incl_cond, exclude}]},
       {app, public_key, [{incl_cond, include}]},
       {app, crypto, [{incl_cond, include}]},
       {app, ssl, [{incl_cond, include}]},
       {app, asn1, [{incl_cond, include}]},
       {app, compiler, [{incl_cond, include}]},
       {app, syntax_tools, [{incl_cond, include}]},
       {app, runtime_tools, [{incl_cond, include}]},
       {app, ssh, [{incl_cond, include}]},
       {app, xmerl, [{incl_cond, include}]},
       {app, mnesia, [{incl_cond, include}]},
       %% Project dependencies
       {app, eenum, [{incl_cond, include}]},
       {app, of_protocol, [{incl_cond, include}]},
       {app, of_config, [{incl_cond, include}]},
       {app, goldrush,[{incl_cond, include}]},
       {app, lager,[{incl_cond, include}]},
       %% Project applications
       {app, icontrol, [{incl_cond, include}]},
       {app, ofs_handler, [{incl_cond, include}]},
       {app, of_driver, [{incl_cond, include}]},
       {app, of_msg_lib, [{incl_cond, include}]}
      ]}.

{target_dir, "icontrol"}.

{overlay, [
           {mkdir, "log/sasl"},
           {copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
           {copy, "files/nodetool", "\{\{erts_vsn\}\}/bin/nodetool"},
           {copy, "icontrol/bin/start_clean.boot",
                  "\{\{erts_vsn\}\}/bin/start_clean.boot"},
           {copy, "files/icontrol", "bin/icontrol"},
           {copy, "files/icontrol.cmd", "bin/icontrol.cmd"},
           {copy, "files/start_erl.cmd", "bin/start_erl.cmd"},
           {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"},
           {copy, "files/sys.config", "releases/\{\{rel_vsn\}\}/sys.config"},
           {copy, "files/tapestry.config", "tapestry.config"},
           {copy, "files/vm.args", "releases/\{\{rel_vsn\}\}/vm.args"}
          ]}.
