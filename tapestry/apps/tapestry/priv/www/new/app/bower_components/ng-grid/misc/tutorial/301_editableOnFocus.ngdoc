@ngdoc overview
@name Tutorial: 301 Edit On Focus
@description

Combine ui.grid.edit with ui.grid.cellNav, you can enable editing when the cell gets focus.
grid.options.enableCellEditOnFocus must be set to true.
<br/>
See api docs for default navigation keys and how you can override.


@example
<example module="app">
  <file name="app.js">
    var app = angular.module('app', ['ui.grid', 'ui.grid.edit', 'ui.grid.cellNav']);

    app.controller('MainCtrl', ['$scope', '$http', function ($scope, $http) {
      $scope.gridOptions = {  };
      $scope.gridOptions.enableCellEditOnFocus = true;

      $scope.gridOptions.columnDefs = [
        { name: 'id', enableCellEdit: false },
        { name: 'name', displayName: 'Name (editOnFocus)'},
        { name: 'age', enableCellEditOnFocus:false, displayName:'age (f2/dblClick edit)'  },
        { name: 'address.city', enableCellEdit: false }
      ];

      $http.get('/data/500_complex.json')
        .success(function(data) {
          $scope.gridOptions.data = data;
        });

        $scope.currentFocused = "";

        $scope.getCurrentFocus = function(){
          var rowCol = $scope.gridApi.cellNav.getFocusedCell();
          if(rowCol !== null) {
              $scope.currentFocused = 'Row Id:' + rowCol.row.entity.id + ' col:' + rowCol.col.colDef.name;
          }
        }

        $scope.gridOptions.onRegisterApi = function(gridApi){
           $scope.gridApi = gridApi;
        };
    }]);
  </file>
  <file name="index.html">
    <div ng-controller="MainCtrl">
      <button type="button" class="btn btn-success" ng-click="getCurrentFocus()">Get Current focused cell</button>  <span ng-bind="currentFocused"></span>
      <br>
      <br>
      <div ui-grid="gridOptions" ui-grid-edit ui-grid-cellnav class="grid"></div>
    </div>
  </file>
  <file name="main.css">
    .grid {
      width: 500px;
      height: 450px;
    }
  </file>
</example>