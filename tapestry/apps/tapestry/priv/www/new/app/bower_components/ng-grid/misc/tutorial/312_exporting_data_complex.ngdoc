@ngdoc overview
@name Tutorial: 312 Exporting Data With Custom UI
@description The exporter feature allows data to be exported from the grid in 
csv or pdf format.  The exporter can export all data, visible data or selected data.

To use the exporter you need to include the ui-grid-exporter directive on
your grid.  If you want to export selected rows you must include the ui-grid-selection
directive on your grid.  If you want to export as PDF you need to have installed pdfMake, 
available through:
<pre>  bower install pdfmake  </pre>

The options and API for exporter can be found at {@link api/ui.grid.exporter ui.grid.exporter}.


@example
In this example we provide a custom UI for calling the exporter, and we tailor
the pdf layout to have different styles than the default.

We also apply a filter to the headers (simulating internationalisation), and we reprocess the grid
data to apply a filter to decode coded data.

<example module="app">
  <file name="app.js">
    var app = angular.module('app', ['ngAnimate', 'ui.grid', 'ui.grid.selection', 'ui.grid.exporter']);

    app.controller('MainCtrl', ['$scope', '$http', function ($scope, $http) {
      $scope.gridOptions = {
        columnDefs: [
          { field: 'name' },
          { field: 'gender', cellFilter: 'mapGender' },
          { field: 'company', visible: false }
        ],
        exporterLinkLabel: 'get your csv here',
        exporterPdfDefaultStyle: {fontSize: 9},
        exporterPdfTableStyle: {margin: [30, 30, 30, 30]},
        exporterPdfTableHeaderStyle: {fontSize: 10, bold: true, italics: true, color: 'red'},
        exporterPdfOrientation: 'portrait',
        exporterPdfPageSize: 'LETTER',
        exporterPdfMaxGridWidth: 500,
        exporterHeaderFilter: function( displayName ) { 
          if( displayName === 'Name' ) { 
            return 'Person Name'; 
          } else { 
            return displayName;
          } 
        },
        exporterFieldCallback: function( grid, row, col, input ) {
          if( col.name == 'gender' ){
            switch( input ){
              case 1:
                return 'female';
                break;
              case 2:
                return 'male';
                break;
              default:
                return 'unknown';
                break;
            }
          } else {
            return input;
          }
        },
        onRegisterApi: function(gridApi){ 
          $scope.gridApi = gridApi;
        }
      };
      
      $http.get('/data/100.json')
        .success(function(data) {
          angular.forEach( data, function( row, index ) {
            if( row.gender === 'female' ){
              row.gender = 1;
            } else {
              row.gender = 2;
            }
          });
          $scope.gridOptions.data = data;
        });
        
      
        
      $scope.export = function(){
        if ($scope.export_format == 'csv') {
          var myElement = angular.element(document.querySelectorAll(".custom-csv-link-location"));
          $scope.gridApi.exporter.csvExport( $scope.export_row_type, $scope.export_column_type, myElement );
        } else if ($scope.export_format == 'pdf') {
          $scope.gridApi.exporter.pdfExport( $scope.export_row_type, $scope.export_column_type );
        };
      };
    }])
    
    .filter('mapGender', function() {
      return function( input ) {
        switch( input ){
          case 1:
            return 'female';
            break;
          case 2:
            return 'male';
            break;
          default:
            return 'unknown';
            break;
        }
      };
    });
  </file>
  
  <file name="index.html">
    <div ng-controller="MainCtrl">
      <label>Which columns should we export?</label>
      <select ng-model="export_column_type"</select>
        <option value='all'>All</option>
        <option value='visible'>Visible</option>
      </select>
      <label>Which rows should we export?</label>
      <select ng-model="export_row_type"</select>
        <option value='all'>All</option>
        <option value='visible'>Visible</option>
        <option value='selected'>Selected</option>
      </select>
      <label>What format would you like?</label>
      <select ng-model="export_format"</select>
        <option value='csv'>CSV</option>
        <option value='pdf'>PDF</option>
      </select>
      <button ng-click="export()">Export</button>
      <div class="custom-csv-link-location">
        <label>Your CSV will show below:</label>
        <span class="ui-grid-exporter-csv-link">&nbsp</span>
      </div>
      
      <div ui-grid="gridOptions" ui-grid-selection ui-grid-exporter class="grid"></div>
    </div>
  </file>
  
  <file name="main.css">
    .grid {
      width: 500px;
      height: 400px;
    }
  </file>
</example>