@ngdoc overview
@name Tutorial: 111 CellClass
@description

A class name or function returning a class name can be assigned to each columnDef.

In this example, we will override the color and background for the first column and color the company text blue if it equals 'Velity'.


<example module="app">
  <file name="app.js">
    var app = angular.module('app', ['ngAnimate', 'ui.grid']);

    app.controller('MainCtrl', ['$scope', '$http', function ($scope, $http) {
      $scope.gridOptions = {
        enableSorting: true,
        columnDefs: [
          { field: 'name', cellClass:'red' },
          { field: 'company',
            cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
              if (grid.getCellValue(row,col) === 'Velity') {
                return 'blue';
              }
            }
          }
        ]
      };

      $http.get('/data/100.json')
        .success(function(data) {
          $scope.gridOptions.data = data;
        });
    }]);
  </file>
  <file name="index.html">
    <div ng-controller="MainCtrl">
      <br>
      <br>
      <div id="grid1" ui-grid="gridOptions" class="grid"></div>
    </div>
  </file>
  <file name="main.css">
    .grid {
      width: 500px;
      height: 200px;
    }
    .red { color: red;  background-color: yellow !important; }
    .blue { color: blue;  }
  </file>
  <file name="scenario.js">
    var gridTestUtils = require('../../test/e2e/gridTestUtils.spec.js');
    describe( '111 cell class', function() {
      it('grid should have two visible columns', function () {
        gridTestUtils.expectHeaderColumnCount( 'grid1', 2 );
      });
  
      it('column one formatted color red, background yellow', function () {
        // red on yellow background for 0,0
        expect( gridTestUtils.dataCell( 'grid1', 0, 0 ).getCssValue('background-color')).toEqual('rgba(255, 255, 0, 1)');
        expect( gridTestUtils.dataCell( 'grid1', 0, 0 ).getCssValue('color')).toEqual('rgba(255, 0, 0, 1)');
        
        // color blue for 2,1, which has company name 'Velity'
        gridTestUtils.expectCellValueMatch( 'grid1', 2, 1, 'Velity' );
        expect( gridTestUtils.dataCell( 'grid1', 2, 1 ).getCssValue('color')).toEqual('rgba(0, 0, 255, 1)');
      });
    });    
  </file>
</example>

