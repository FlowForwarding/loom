@ngdoc overview
@name Tutorial: 313 Custom Interpolation Symbols
@description

Combining AngularJS with other frameworks/tools sometimes requires changing the normal interpolation symbols (`{{` and `}}`) to something else, like `[[` or `%`.
<br>
<br>
UI Grid will automatically detect the change and transform any default symbols in the templates it uses to the custom values. This means that in the unlikely event
you're expecting to use `{{` or `}}` to signify something in your custom-interpolation-symbol application, then inside the grid your stuff will likely break.

<example module="app">
  <file name="app.js">
    var app = angular.module('app', ['ngAnimate', 'ui.grid']);

    app.config(function($interpolateProvider) {
        $interpolateProvider.startSymbol('[[');
        $interpolateProvider.endSymbol(']]');
    });

    app.controller('MainCtrl', ['$scope', '$http', '$interpolate', function ($scope, $http, $interpolate) {
      $scope.foo = 'whoohoo!';
      $scope.startSym = $interpolate.startSymbol();
      $scope.endSym = $interpolate.endSymbol();

      $scope.gridOptions = {
        enableSorting: true,
        columnDefs: [
          { field: 'name' },
          { field: 'gender' },
          { field: 'company', enableSorting: false }
        ]
      };

      $http.get('/data/100.json')
        .success(function(data) {
          $scope.gridOptions.data = data;
        });
    }]);
  </file>
  <file name="index.html">
    <div ng-controller="MainCtrl">
      This app uses [[ startSym ]] and [[ endSym ]] for interpolation symbols: [[ foo ]]
      <br>
      <br>
      <div ui-grid="gridOptions" class="grid"></div>
    </div>
  </file>
  <file name="main.css">
    .grid {
      width: 500px;
      height: 300px;
    }
  </file>
</example>
